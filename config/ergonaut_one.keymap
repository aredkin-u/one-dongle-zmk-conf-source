#include "keys_ru.h"
#include <dt-bindings/zmk/input_transform.h>
#include <input/processors.dtsi>
#include <zephyr/dt-bindings/input/input-event-codes.h>
#include <behaviors.dtsi>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/outputs.h>
#include <dt-bindings/zmk/pointing.h>

/ {
    behaviors {
        cap_sen: cap_sen {
            compatible = "zmk,behavior-hold-tap";
            label = "CAP_SEN";
            bindings = <&mo>, <&mkp>;

            #binding-cells = <2>;
            tapping-term-ms = <150>;
            hold-while-undecided;
        };
    };

    combos {
        compatible = "zmk,combos";

        cmben {
            bindings = <&layer_en>;
            key-positions = <3 4>;
            layers = <1>;
        };

        cmbru {
            bindings = <&layer_ru>;
            key-positions = <3 4>;
            layers = <0>;
        };

        LRPar {
            bindings = <&LR_Par>;
            key-positions = <8 9>;
        };
    };

    macros {
        to_ru: to_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N2))>;
            label = "TO_RU";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        to_en: to_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LS(LC(N1))>;
            label = "TO_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_en: layer_en {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 0 &to_en>;
            label = "LAYER_EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        layer_ru: layer_ru {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&to 1 &to_ru>;
            label = "LAYER_RU";
            tap-ms = <30>;
            wait-ms = <0>;
        };

        en: en {
            compatible = "zmk,behavior-macro-one-param";
            #binding-cells = <1>;
            bindings =
                <&to_en>,
                <&macro_press>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_pause_for_release>,
                <&macro_release>,
                <&macro_param_1to1 &kp MACRO_PLACEHOLDER>,
                <&macro_tap>,
                <&to_ru>;

            label = "EN";
            wait-ms = <0>;
            tap-ms = <30>;
        };

        LR_Par: LR_Par {
            compatible = "zmk,behavior-macro";
            #binding-cells = <0>;
            bindings = <&kp LPAR &kp RPAR &kp LEFT_ARROW>;
            label = "LR_PAR";
        };
    };

    keymap {
        compatible = "zmk,keymap";

        en {
            bindings = <
&kp ESC    &kp Q  &kp W  &kp E     &kp R      &kp T        &kp Y        &kp U    &kp I    &kp O  &kp P  &kp BSPC
&kp TAB    &kp A  &kp S  &kp D     &kp F      &kp G        &kp H        &kp J    &kp K    &kp L  &none  &kp BSLH
&kp LSHFT  &kp Z  &kp X  &kp C     &kp V      &kp B        &kp N        &kp M    &none    &none  &none  &kp RSHIFT
                         &kp LALT  &kp LCTRL  &lt 2 SPACE  &lt 3 SPACE  &kp RET  &kp DEL
            >;

            display-name = "Base";
        };

        ru {
            display-name = "Ru";
            bindings = <
&kp ESC    &kp RU_CYRILLIC_SHORT_I  &kp RU_CYRILLIC_TSE   &kp RU_CYRILLIC_U   &kp RU_CYRILLIC_KA  &mt RU_CYRILLIC_IO RU_CYRILLIC_IE  &kp RU_CYRILLIC_EN  &kp RU_CYRILLIC_GHE                              &kp RU_CYRILLIC_SHA  &kp RU_CYRILLIC_SHCHA  &kp RU_CYRILLIC_ZE   &kp RU_CYRILLIC_HA
&kp TAB    &kp RU_CYRILLIC_EF       &kp RU_CYRILLIC_YERU  &kp RU_CYRILLIC_VE  &kp RU_CYRILLIC_A   &kp RU_CYRILLIC_PE                 &kp RU_CYRILLIC_ER  &kp RU_CYRILLIC_O                                &kp RU_CYRILLIC_EL   &kp RU_CYRILLIC_DE     &kp RU_CYRILLIC_ZHE  &kp RU_CYRILLIC_E
&kp LSHFT  &kp RU_CYRILLIC_YA       &kp RU_CYRILLIC_CHE   &kp RU_CYRILLIC_ES  &kp RU_CYRILLIC_EM  &kp RU_CYRILLIC_I                  &kp RU_CYRILLIC_TE  &mt RU_CYRILLIC_HARD_SIGN RU_CYRILLIC_SOFT_SIGN  &kp RU_CYRILLIC_BE   &kp RU_CYRILLIC_YU     &kp RU_DOT           &kp RSHFT
                                                          &kp LALT            &kp LEFT_CONTROL    &lt 2 SPACE                        &lt 4 SPACE         &kp ENTER                                        &kp DEL
            >;
        };

        nav {
            bindings = <
&trans  &kp N1    &kp N2        &kp N3     &kp N4  &kp N5  &kp N6  &kp N7  &kp N8  &kp N9   &kp N0    &trans
&trans  &trans    &kp UP_ARROW  &trans     &trans  &trans  &trans  &trans  &trans  &kp INS  &kp HOME  &kp PG_UP
&trans  &kp LEFT  &kp DOWN      &kp RIGHT  &trans  &trans  &trans  &trans  &trans  &trans   &kp END   &kp PG_DN
                                &trans     &trans  &trans  &trans  &trans  &trans
            >;

            display-name = "Navigation";
        };

        sym_en {
            bindings = <
&trans  &kp AT     &kp HASH   &kp PRCNT  &kp CARET  &kp AMPS        &kp LT            &kp GT             &kp LPAR  &kp RPAR   &kp UNDER  &trans
&trans  &kp TILDE  &kp GRAVE  &kp SQT    &kp DQT    &kp DLLR        &kp LEFT_BRACKET  &kp RIGHT_BRACKET  &kp LBRC  &kp RBRC   &kp EQUAL  &none
&trans  &kp BSLH   &kp PIPE   &kp FSLH   &kp EXCL   &mt SEMI COMMA  &mt COLON DOT     &kp QUESTION       &kp PLUS  &kp MINUS  &kp STAR   &trans
                              &trans     &trans     &trans          &mo 5             &trans             &trans
            >;

            display-name = "Symbols";
        };

        sym_ru {
            display-name = "Symbols";
            bindings = <
&trans         &en AT            &en HASH   &kp PRCNT    &en CARET   &en AMPS              &en LT               &en GT             &kp LPAR  &kp RPAR   &kp UNDER  &trans
&trans         &en TILDE         &en GRAVE  &en SQT      &kp RU_DQT  &en DLLR              &en LEFT_BRACKET     &en RIGHT_BRACKET  &en LBRC  &en RBRC   &kp EQUAL  &none
&kp RU_NUMERO  &kp RU_BACKSLASH  &en PIPE   &kp RU_FSLH  &kp EXCL    &mt RU_SEMI RU_COMMA  &mt RU_COLON RU_DOT  &kp RU_QUESTION    &kp PLUS  &kp MINUS  &kp STAR   &trans
                                            &trans       &trans      &trans                &mo 5                &trans             &trans
            >;
        };

        adj {
            bindings = <
&bootloader  &none  &kp F1  &kp F2   &kp F3   &kp F4   &bt BT_SEL 0  &bt BT_SEL 1  &bt BT_SEL 2      &bt BT_SEL 3  &bt BT_SEL 4  &bt BT_CLR
&none        &none  &kp F5  &kp F6   &kp F7   &kp F8   &out OUT_BLE  &kp C_VOL_DN  &kp K_MUTE        &kp C_VOL_UP  &none         &studio_unlock
&none        &none  &kp F9  &kp F10  &kp F11  &kp F12  &out OUT_USB  &kp K_PREV    &kp K_PLAY_PAUSE  &kp K_NEXT    &none         &none
                            &none    &none    &none    &none         &none         &none
            >;

            display-name = "Adjust";
        };
    };
};
